extends partial/layout

block header
    #title
        h1 有趣的建站过程
    #description
        p 通过 AWS 的 S3 服务建立一个静态站点，籍此得到可持续更新，免费的 HTTPS 证书。还有 Bot 自动做 CI 部署，推送到 S3 上。
    .divider-curly

block content
    article
        p 看到有答主说4维指针5维指针并不能表明毛子的编程很厉害，那我还拿Nginx来说吧，如果你的Web服务器不想支持正则表达式，也不想支持加密访问，那Nginx是不依赖除了系统库之外的任何库的，那些常用的数据结构都由Nginx的作者自己实现了：字符串，链表(chain和list)，hash表，队列，动态数组，红黑树等。最后更新一下，有人提出使用void ****并不能证明毛子编程厉害，而是增加调试和维护难度。我其实一直没说这种编程风格好，也承认调试它难度不小，所以用了"厉害"二字，我调试过Nginx，这个4维指针有时让人十分恼火，后来用最笨的方法，在Makefile里找到那些模块所处的顺序，写在纸上，然后调试的时候打出它的index，一对就知道它是哪个模块的上下文了。这其实不是最复杂的地方，我个人认为是某个时刻，执行到某个模块的上下文时，更换handler才是最复杂的，它不再像前面那样"所见即所得"。最后，我发现我和大多数评论里的人都偏题了，题主问的是"为什么厉害"？而我们纠结的是"这样到底是不是厉害"？最后还是强调下那个观点，我觉得是因为毛子的数学教育采用精英模式，造就了他们深厚的数学功底，所以对数据结构与算法的理解比别国要好！至于为什么拿Nginx作为例子，是因为我觉得把它当做网络编程，数据结构与算法的教科书都是可以的。它的代码编写风格也良好，得益于它的看门人对源代码风格的严格把控，曾经看到有人提交patch时，因为某个变量没对齐，函数定义与函数定义之前少隔了一行空行都被他指出来了。最后，我并不捧这种编程方式，武侠小说里说内功深厚练绝世神功，并且不能操之过急才能登峰造极，否则极容易走火入魔。编程其实也是这样。以下是原回答
        h1 #[a(href="#")大测试]
        p 后来用最笨的方法，在Makefile里找到那些模块所处的顺序，写在纸上，然后调试的时候打出它的index，一对就知道它是哪个模块的上下文了。这其实不是最复杂的地方，我个人认为是某个时刻，执行到某个模块的上下文时，更换handler才是最复杂的，它不再像前面那样"所见即所得"。最后，我发现我和大多数评论里的人都偏题了，题主问的是"为什么厉害"？而我们纠结的是"这样到底是不是厉害"？最后还是强调下那个观点，我觉得是因为毛子的数学教育采用精英模式，造就了他们深厚的
        h2 中测试
        h3 小测试
        h4 h4 在这里
        h5 h5 在这里
        h6 h6 之后就没有了……
        em 革命不是请客吃饭
        br
        p #[a(href="#") 测试链接]接着另一个 paragraph